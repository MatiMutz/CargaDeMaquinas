@page "/Pdf/{codigo}/{accion}"
@using Microsoft.AspNetCore.Components;
@using Microsoft.JSInterop;
@using SupplyChain;
@using Syncfusion.Blazor.FileManager;
@using Syncfusion.Blazor.Grids;
@using Syncfusion.Blazor.Navigations;
@using Syncfusion.ExcelExport;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Net.Http;
@using System.Net.Http.Json;
@using System.Text.Json;
@using System.Threading.Tasks;
@using System.Web;
@using System.IO;
@using Syncfusion.Blazor.PdfViewer;
@using Syncfusion.Blazor.PdfViewerServer;
@if (rutas == null)
{
    <p><em>Loading...</em></p>
}
else
{
    if (accion == "OFRUTA1")
    {
        @foreach (Solution ruta in rutas)
        {
            if (ruta.CAMPO == "RUTAOF")
            {
                codigo = ruta.VALORC + codigo.Substring(0, 7) + ".pdf";
                if (File.Exists(codigo))
                {
                    <div class="control-section">
                        <SfPdfViewerServer DocumentPath="@codigo" Height="640px" Width="100%"></SfPdfViewerServer>
                    </div>
                }
                else
                {
                    <label>No hay pdf asociado a la orden de fabricacion.</label>
                }

            }
        }
    }
    if (accion == "CNC")
    {
        @foreach (Solution ruta in rutas)
        {
            if (ruta.CAMPO == "RUTACNC")
            {
                codigo = ruta.VALORC + codigo.Substring(0, 7) + ".txt";
                <embed src="@codigo" width="100%" height="600px" />
            }
        }
    }
}

@code {
    private string DocumentPath { get; set; } = "E:/D-13870.pdf";

    [Inject] protected CustomHttpClient Http { get; set; }

    protected List<Solution> rutas;

    string docPath;

    [Parameter]
    public string codigo { get; set; }

    [Parameter]
    public string accion { get; set; }

    protected override async Task OnInitializedAsync()
    {
        rutas = await Http.GetFromJsonAsync<List<Solution>>("api/Solution");

        await base.OnInitializedAsync();
    }

    protected override void OnInitialized()
    {
        codigo = codigo ?? "fantastic";
    }
}
